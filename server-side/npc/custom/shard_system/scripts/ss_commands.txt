-	script	SSCommands	-1,{

    OnInit:
    	bindatcmd("si", "SSCommands::OnDisplayInfo", 0, 100, 1);
        bindatcmd("shardinfo", "SSCommands::OnDisplayInfo", 0, 100, 1);
        bindatcmd("listshards","SSCommands::OnListShards", 60, 100, 1);
        bindatcmd("rescueshard", "SSCommands::OnCreateShard", 70, 100, 1);
    end;

    /**
     * @command shardinfo
     * @description Provide the invoking player with equipped shard
     * information. Any spamming will mute the command from usage.
     */
    OnDisplayInfo:
    	// Get the time the command was invoked.
    	acmd_si_invoked = gettimetiick(2);

        if(acmd_si_invoked <= acmd_si_mute) {
            dispbottom "Spamming detected. Please wait and try again.";
            end;
        }

        if(!EQI_ACC_L_FLAG && !EQI_ACC_R_FLAG) {
            dispbottom "No shards are equipped on your character.";
            end;
        }

        if(EQI_ACC_L_FLAG) {
            // Query the database
            query_sql("SELECT `unique_id` FROM `inventory` WHERE `char_id` = "+ getcharid(0) +" AND `equip` = "+ EQI_ACC_L, .@unique_id);
            query_sql("SELECT `item_id`, `base_exp`, `next_exp` FROM `shard_db` WHERE `unique_id` = "+ .@unique_id, .@item_id, .@base_exp, .@next_exp);

            // Display information to the player.
            dispbottom "Item Name: " + getitemname(.@item_id);
            dispbottom "Experience Points: " + .@base_exp + " / " + .@next_exp;
            dispbottom ((.base_exp * 100)) / .@next_exp) + "% to next level.";
        }

        if(EQI_ACC_R_FLAG) {
            // Query the database
            query_sql("SELECT `unique_id` FROM `inventory` WHERE `char_id` = "+ getcharid(0) +" AND `equip` = "+ EQI_ACC_R, .@unique_id);
            query_sql("SELECT `item_id`, `base_exp`, `next_exp` FROM `shard_db` WHERE `unique_id` = "+ .@unique_id, .@item_id, .@base_exp, .@next_exp);

            // Display information to the player.
            dispbottom "Item Name: " + .@getitemname(.@item_id);
            dispbottom "Experience Points: " + .@base_exp + " / " + .@next_exp;
            dispbottom ((.base_exp * 100)) / .@next_exp) +"% to next level.";
        }

        // --- Abuse Management ---
        // When the command is first used after the counter resets.
        // This determines how many times they used the command since first
        // invocation.
        if(!acmd_si_counter)
            acmd_si_first_invk = gettimetick(2);
        
        // Increase the usage counter by one.
        acmd_si_counter++;

        // Should the command be muted for the user?
        // TODO: Replace literals with settings in conf file.
        if((acmd_si_counter == 3) && (acmd_si_first_invk + 5 <= acmd_si_invoked)) {
            acmd_si_mute = acmd_si_invoked + 60; // 1 min
            acmd_si_counter = 0;
        }
        
        // Reset the counter if spamming not detected.
        if(acmd_si_counter == 3)
            acmd_si_counter = 0;
    end;

    /**
     * @command rescueshard {player_name}
     * @description GM item management tool. Used to recreate
     * a dynamic item for any player who may have lost it. The
     * command will not create another item if the item is found.
     */
	OnRetrieval:
        // ...
    
        // Search the database for all items that the player has made.
        query_sql("SELECT `item_id`, `unique_id`, `date_created` FROM `shard_db` WHERE `char_id` = "+ getarg(0) +" ORDER BY `date_created` DESC", .@item_id, .@unique_id, .@date$);
        
        // Generate a dynamic menu which displays each match.
        // ex. 0000-00-00 | Shard of Prueba Lv. 3
        for( .@i = 0; .@i < getarraysize(); .@i++)
            .@itemlist$ += substr(.@date$[i], 0, 10) + " | " + getitemname(.@item_id[i]) + ":";

        // Create a menu for the player.
        .@menu = prompt(.@itemlist$) - 1;
        
        // Player can only exit the loop if they cancel.
        while(.@menu != 0xFF) {
            // Does the item exist in other places?
            // mysql query
            
            mes "[Management Console]";
            mes "ID "+ .@item_id[] +" was found in the shard_db. Last ";
            mes "seen on user "+ getcharname(.@char_id[], 0);";
            
            // Create a menu for the player.
            .@val = prompt(.@menu$) - 1;
        }
        
        // WHILE LOOP
            // Generate a dynamic menu displaying each match.
            // 1. 0000-00-00 00:00:00 | Shard of Prueba Lv. 1 
            // 2. 0000-00-00 00:00:00 | Shard of Volcanic Burst Lv. 3 
            // ...
            
            // Use .@unique_id[@menu] to search these tables for the item:
            // `inventory`, `cart_inventory`, `storage`, `guild_storage`
            
            // If found
                // Show window of results. Log results.
            // If nothing found
                // recreate item  
        // end
	end;*/

	// @newshard <Item ID>,{<charID>}
    // GM new shard creation. Created shard <Item ID>
	// either on rewoking player, or character whose ID is provided.
	OnNewShard:
		if( .@atcmd_numparameters < 1 || .@atcmd_numparameters > 2 ) {
			dispbottom "Usage: @newshard <Item ID>,{<charID>}";
			dispbottom "Rewoking player will get the shard if no CharID provided.";
			end;
		}
	
		.@shard_id = atoi(.@atcmd_parameters$[0]);
		if( !.@shard_id || getitemname(.@shard_id) == "null" ) {
			dispbottom "There's no such item ID.";
			end;
		}
	
		.@flag = .@atcmd_parameters$[1]?1:0;	
	
		switch(.@flag) {
			case 1: //CharID provided
				.@cid = atoi(.@atcmd_parameters$[1]);
				if( !.@cid ) {
					dispbottom "Invalid CharID provided.";
					end;
				}
				
				if( query_sql("SELECT (`account_id`,`name`) FROM `char` WHERE `char_id` = " + .@cid, .@aid, .@name$) < 1 ) {
					dispbottom "There is no character with such charID/Name.";
					end;
				}
				
				.@gmaid = playerattached();
				if( !attachrid(.@aid) ) {
					if( attachrid(.@gmaid) )
						dispbottom "Destined character is offline.";
					end;
				}
				
				if( getcharid(0) != .@cid ) {
					if( attachrid(.@gmaid) )
						dispbottom "Destined player is on the right account, but on the wrong character.";
					end;
				}
			break;
			case 0:
				.@cid = getcharid(0);
				.@aid = getcharid(3); 
				.@name$ = strcharinfo(PC_NAME);
			break;
			
			default:
				dispbottom "An error occured. Please retry the command.";
			break;
		}
	
		// Create a new shard entry in the DB.
	    query_sql("INSERT INTO `shard_db` (`owner_cid`, `owner_name`, `owner_aid`, `item_id`, `item_name`, `date_created`) VALUES("+ .@cid +", '"+ escape_sql(.@name$) +"', "+ .@aid +", "+ .@shard_id +", '"+ escape_sql(getitemname(.@shard_id)) +"', GETDATE()) ");
	
	    // Select the newest shard entry.
	    query_sql("SELECT `id` FROM `shard_db` WHERE `owner_id` = "+ .@cid +" ORDER BY `date_created` DESC LIMIT 1", .@shard_key);
	
	    // Segment the 32-bit primary key.
	    .@card2 = .@shard_key[0] >> 16;
	    .@card3 = .@shard_key[0] & 65535;
	
	    // Provide the player with the shard.
	    getitem2 .@shard_id,1,1,0,0,-255,.@card2,.@card3,0;
	    return;
	end;
	
	// @listshards <Name/CharID>;
	// Provides info on shards created(in the future wielded)
	// by the player under provided name/CharID
	// Limited to 5 characters/25 shards per character.
	OnListShards:
		if( .@atcmd_numparameters != 1 ) {
			dispbottom "Usage: @listshards <Name/CharID>";
			dispbottom "For better results use CharID over Name.";
			end;
		}
		
		.@desc$ = .@atcmd_parameters$[1];
		if( .@count = query_sql("SELECT (`account_id`,`char_id`,`name`) FROM `char` WHERE `char_id` = " + atoi(.@desc$) + " OR `name` LIKE '%" + escape_sql(.@desc$) + "%'",.@aid,.@cid,.@name$) < 1 ) {
			dispbottom "No characters with such name or charID found.";
			end;
		}
		
		if( .@count > 5 ) {
			dispbottom "Results for first 5 found players will be shown.";
			.@count = 5;
		}
		
		for( .@i = 0; .@i < .@count; .@i++) {
			dispbottom "Character #" + .@i + ". ";
			dispbottom "Name: " + .@name$[.@i] + " CharID: " + .@cid[.@i] + " AccID:" + .@aid[.@i];
			if( .@count2 = query_sql("SELECT (`id`,`item_id`,`item_name`,`level`,`owner_cid`,`wielder_cid`) FROM `shard_db` WHERE `owner_cid` = " + .@cid[.@i] + " OR `wielder_cid` = " + .@cid[.@i] + " ORDER BY `date_created` DESC",.@sid,.@siid,.@sin$,.@sl,.@ocid,.@wcid) < 1 ) {
				dispbottom "      Player has no registered created or wielded shards.";
				continue;
			} else {
				if( .@count2 > 25 ) {
					dispbottom "      Only last 25 found shards will be shown. For more info please refer to your Head GM/Developer.";
					.@count2 = 25;
				}
				for( .@a = 0; .@a < .@count2; .@a++ ) {
					dispbottom "      Shard Key: " + .@sid[.@a] + " Shard Level: " + .@sl[.@a] + " Item ID: " + .@siid[.@a] + " Item Name: " + .@sin$[.@a];
					dispbottom "      Wielder CharID: " + .@wcid[.@a] + " Creator CharID: " + .@ocid[.@a];
				}
			}
		}
	end;
}
